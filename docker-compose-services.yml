version: '3.8'

services:
  # Data Index Service
  # data-index:
  #   image: quay.io/bamoe/data-index-service:${KOGITO_VERSION}
  #   container_name: kogito-data-index
  #   ports:
  #     - "${INDEX_SERVICE_PORT:-8180}:8080"
  #   volumes:
  #     - ./persistence/protobuf:/home/kogito/data/protobufs/
  #   environment:
  #     QUARKUS_DATASOURCE_USERNAME: ${POSTGRES_USER:-kogito}
  #     QUARKUS_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-kogito}
  #     QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-kogito}
  #     QUARKUS_FLYWAY_MIGRATE_AT_START: "true"
  #     QUARKUS_FLYWAY_BASELINE_ON_MIGRATE: "true"
  #     QUARKUS_FLYWAY_TABLE: FLYWAY_DATA_INDEX
  #     KAFKA_BOOTSTRAP_SERVERS: kafka:29092
  #     KOGITO_DATA_INDEX_QUARKUS_PROFILE: kafka-events-support
  #     QUARKUS_HTTP_CORS_ORIGINS: "/.*/"
  #   depends_on:
  #     kafka:
  #       condition: service_started
  #     postgres:
  #       condition: service_healthy
  #   networks:
  #     - kogito-network
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 10

  # Jobs Service
  # jobs-service:
  #   image: quay.io/bamoe/jobs-service:${KOGITO_VERSION}
  #   container_name: kogito-jobs-service
  #   ports:
  #     - "${JOBS_SERVICE_PORT:-8380}:8080"
  #   environment:
  #     QUARKUS_DATASOURCE_USERNAME: ${POSTGRES_USER:-kogito}
  #     QUARKUS_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-kogito}
  #     QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-kogito}
  #     KAFKA_BOOTSTRAP_SERVERS: kafka:29092
  #     QUARKUS_FLYWAY_MIGRATE_AT_START: "true"
  #     QUARKUS_FLYWAY_BASELINE_ON_MIGRATE: "true"
  #     QUARKUS_FLYWAY_TABLE: FLYWAY_JOBS_SERVICE
  #     QUARKUS_PROFILE: events-support
  #     QUARKUS_HTTP_CORS_ORIGINS: "/.*/"
  #   depends_on:
  #     kafka:
  #       condition: service_started
  #     postgres:
  #       condition: service_healthy
  #   networks:
  #     - kogito-network
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 10

  # Management Console
  management-console:
    image: quay.io/bamoe/management-console:9.2.1-ibm-0005
    container_name: bamoe-management-console
    ports:
      - "${MANAGEMENT_CONSOLE_PORT:-8080}:8080"
    networks:
      - kogito-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

networks:
  kogito-network:
    external: true
