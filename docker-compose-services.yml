version: '3.8'

services:
  # Data Index Service
  data-index:
    image: quay.io/bamoe/data-index-service:${KOGITO_VERSION}
    container_name: kogito-data-index
    ports:
      - "${INDEX_SERVICE_PORT:-8180}:8080"
    volumes:
      - ./persistence/protobuf:/home/kogito/data/protobufs/
    environment:
      QUARKUS_DATASOURCE_USERNAME: ${POSTGRES_USER:-kogito}
      QUARKUS_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-kogito}
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-kogito}
      QUARKUS_FLYWAY_MIGRATE_AT_START: "true"
      QUARKUS_FLYWAY_BASELINE_ON_MIGRATE: "true"
      QUARKUS_FLYWAY_TABLE: FLYWAY_DATA_INDEX
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      KOGITO_DATA_INDEX_QUARKUS_PROFILE: kafka-events-support
      QUARKUS_HTTP_CORS_ORIGINS: "/.*/"
    depends_on:
      kafka:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      - kogito-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  # Jobs Service
  jobs-service:
    image: quay.io/bamoe/jobs-service:${KOGITO_VERSION}
    container_name: kogito-jobs-service
    ports:
      - "${JOBS_SERVICE_PORT:-8380}:8080"
    environment:
      QUARKUS_DATASOURCE_USERNAME: ${POSTGRES_USER:-kogito}
      QUARKUS_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-kogito}
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-kogito}
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      QUARKUS_FLYWAY_MIGRATE_AT_START: "true"
      QUARKUS_FLYWAY_BASELINE_ON_MIGRATE: "true"
      QUARKUS_FLYWAY_TABLE: FLYWAY_JOBS_SERVICE
      QUARKUS_PROFILE: events-support
      QUARKUS_HTTP_CORS_ORIGINS: "/.*/"
    depends_on:
      kafka:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      - kogito-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  # Management Console
  management-console:
    image: quay.io/bamoe/management-console:${KOGITO_VERSION}
    container_name: bamoe-management-console
    ports:
      - "${MANAGEMENT_CONSOLE_PORT:-8280}:8080"
    environment:
      KOGITO_DATAINDEX_HTTP_URL: http://${KOGITO_DATAINDEX_HOST:kogito-data-index}:${KOGITO_DATAINDEX_PORT:8080}/data-index
      KOGITO_SERVICE_URL: http://${KOGITO_SERVICE_HOST:kogito-jobs-service}:${KOGITO_SERVICE_PORT:8080}
      # For local development (services running on host machine):
      KOGITO_RUNTIME_SERVICE_URL: |
        http://host.docker.internal:8081=Brew Service|Order Coffee,
        http://host.docker.internal:8082=Order Service|Process Orders
      # For containerized services:
      # KOGITO_RUNTIME_SERVICE_URL: |
      #   http://kogito-brew-service:8080=Brew Service|Order Coffee,
      #   http://kogito-order-service:8080=Order Service|Process Orders
      QUARKUS_HTTP_CORS_ORIGINS: /.*/
    depends_on:
      - jobs-service
    networks:
      - kogito-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

networks:
  kogito-network:
    external: true
