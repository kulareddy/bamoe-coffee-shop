#####################################
# Quarkus settings
#####################################
%dev.quarkus.http.port=8082

quarkus.http.cors=true
quarkus.dev-ui.cors.enabled=false
quarkus.http.cors.origins=*
quarkus.swagger-ui.always-include=true
quarkus.smallrye-openapi.path=docs/openapi.json
quarkus.kogito.data-index.graphql.ui.always-include=true

#####################################
# Events settings
#####################################
kafka.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

mp.messaging.incoming.make-drink.connector=smallrye-kafka
mp.messaging.incoming.make-drink.topic=order-drink
mp.messaging.incoming.make-drink.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.make-drink.auto.offset.reset=earliest

mp.messaging.outgoing.drink-ready.connector=smallrye-kafka
mp.messaging.outgoing.drink-ready.topic=order-drink
mp.messaging.outgoing.drink-ready.value.serializer=org.apache.kafka.common.serialization.StringSerializer


#####################################
# Persistence settings
#####################################
kie.flyway.enabled=true
kogito.persistence.type=jdbc
quarkus.datasource.db-kind=postgresql
kogito.persistence.optimistic.lock=true

quarkus.datasource.username=${POSTGRES_USER:kogito}
quarkus.datasource.password=${POSTGRES_PASSWORD:kogito}
quarkus.datasource.jdbc.url=jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB:kogito}
quarkus.datasource.reactive.url=postgresql://${${POSTGRES_HOST:localhost}}:${POSTGRES_PORT:5432}/${POSTGRES_DB:kogito}

# Disabling Hibernate schema generation
quarkus.hibernate-orm.database.generation=none
quarkus.hibernate-orm.validate-in-dev-mode=false

#####################################
# Transactions
#####################################


#####################################
# Jobs Service configuration
#####################################
kogito.jobs-service.url=http://${JOBS_SERVICE_HOST:localhost}:${JOBS_SERVICE_PORT:${quarkus.http.port}}
kogito.jobs-service.management.heartbeat.management-id=${quarkus.application.name}
# run periodic job loading every minute
kogito.jobs-service.loadJobIntervalInMinutes=1
# load jobs into the InMemory scheduler that expire within the next 10 minutes
kogito.jobs-service.schedulerChunkInMinutes=10
# (re)load jobs into the InMemory scheduler that have expired in the last 5 minutes and have not been properly executed
kogito.jobs-service.loadJobFromCurrentTimeIntervalInMinutes=5

#####################################
# Services definition
#####################################
kogito.service.url=http://${KOGITO_SERVICE_HOST:localhost}:${KOGITO_SERVICE_PORT:${quarkus.http.port}}
kogito.data-index.url=http://${INDEX_SERVICE_HOST:localhost}:${INDEX_SERVICE_PORT:${quarkus.http.port}}

#####################################
# Security & Dev UI
#####################################
kogito.security.auth.enabled=false
quarkus.oidc.enabled=false

kogito.security.auth.impersonation.enabled=true
kogito.security.auth.impersonation.allowed-for-roles=managers
bamoe.devui.users.alice.groups=barista
bamoe.devui.users.dave.groups=manager


#####################################
# Logging
#####################################
